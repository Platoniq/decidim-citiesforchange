// Define custom properties as css color variables

$black: #000000;
$red: #e30613;
$red-rgb: 227, 6, 19;
$white: white;
$light-gray: $white;
$dark-gray: lighten($black, 10%);

$yellow: #e6be41;
$yellow-rgb: 230, 190, 65;
$pink: #ee7799;
$pink-rgb: 238, 119, 153;
$green: #00a767;
$green-rgb: 0, 167, 103;
$purple: #8e75b3;
$purple-rgb: 142, 117, 179;
$blue: #5f93b1;
$blue-rgb: 95, 147, 177;

$body-font-color: $black;
$body-background-color: $white;

// Variables

$primary: $yellow;
$primary-rgb: $yellow-rgb;
$secondary: $pink;
$secondary-rgb: $pink-rgb;
$success: $green;
$success-rgb: $green-rgb;
$warning: #e16c1d;
$warning-rgb: 225, 108, 29;
$alert: $red;
$alert-rgb: $red-rgb;

$highlight: $pink;
$highlight-rgb: $pink-rgb;
$highlight-alternative: $purple;
$highlight-alternative-rgb: $purple-rgb;

$title-bar-bg: $black;
$card-link: $black;
$card-link-hover: $primary;
$link-color: $white;
$navbar-bg: $white;
$navbar-fg: $black;
$navbar-fg-hover: $white;

// Variables

$twitter: #55acee !default;
$facebook: #3b5998 !default;
$google: #4285f4 !default;

$proposals: $blue;
$actions: $green;
$debates: $pink;
$meetings: $purple;

// background colors used in public diff views
$color-addition: #e6ffed;
$color-removal: #ffeef0;

:root {
  --primary: #{$primary};
  --primary-rgb: #{$primary-rgb};
  --secondary: #{$secondary};
  --secondary-rgb: #{$secondary-rgb};
  --success: #{$success};
  --success-rgb: #{$success-rgb};
  --warning: #{$warning};
  --warning-rgb: #{$warning-rgb};
  --alert: #{$alert};
  --alert-rgb: #{$alert-rgb};
  --proposals: #{$proposals};
  --actions: #{$actions};
  --debates: #{$debates};
  --meetings: #{$meetings};
  --twitter: #{$twitter};
  --facebook: #{$facebook};
  --google: #{$google};
}

$triangle-size: 1rem;

@mixin banner-background() {
  background-image: image-url("banner.png");
  background-size: cover;
}

@mixin caret-wrapped($color) {
  &::before,
  &::after {
    content: " ";
    display: inline-block;
    width: $triangle-size;
    height: $triangle-size;
    margin: 0 0.5rem;
    background-color: $color;
    clip-path: polygon(50% 15%, 100% 100%, 0% 100%);
  }

  &::before {
    transform: rotate(90deg);
  }
  &::after {
    transform: rotate(-90deg);
  }

  &:hover {
    color: lighten($color, 20%);

    &::before,
    &::after {
      background-color: lighten($color, 20%);
    }
  }
}

@mixin bottom-caret($color) {
  &::after {
    content: "";
    display: block;
    width: $triangle-size;
    height: $triangle-size;
    margin: auto;
    background-color: $color;
    clip-path: polygon(50% 65%, 0% 0%, 100% 0%);
    transform: rotate(180deg);
  }
}

@mixin top-caret($color) {
  &::before {
    content: "";
    display: block;
    width: $triangle-size;
    height: $triangle-size;
    margin: auto;
    background-color: $color;
    clip-path: polygon(50% 65%, 0% 0%, 100% 0%);
  }
}

@mixin top-circle($color) {
  &::before {
    content: "";
    display: block;
    width: $triangle-size;
    height: $triangle-size;
    margin: auto;
    background-color: $color;
    clip-path: circle(50%);
  }
}

@mixin slanted($percentage) {
  clip-path: polygon($percentage 0%, 0% 100%, 100% - $percentage 100%, 100% 0%);
}

@mixin heading-font() {
  text-transform: none;
  font-size: 1.5rem;
  font-weight: 900;
}

@mixin title-font() {
  text-transform: uppercase;
}
